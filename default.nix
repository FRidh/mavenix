{
  mavenix ? import ./mavenix.nix {},
  pkgs ? mavenix.pkgs,
}: with pkgs;

let
  inherit (mavenix) name version;
  gen-header = "# This file has been generated by ${name} ${version}.";

  default-tmpl = writeText "default-tmpl.nix" ''
    ${gen-header} Configure the build here!
    {
      mavenix ? import ./%%env%% {},
      pkgs ? mavenix.pkgs,
      src ? ./%%src%%,
      doCheck ? false,
    }: mavenix.buildMaven {
      inherit src doCheck;
      infoFile = ./%%info%%;
      # remotes = { central = "https://repo.maven.apache.org/maven2"; };
      # settings = ./settings.xml;
      # deps = [ { path = "org/extra/dependencies"; sha1 = "0123456789abcdef"; } ];
      # drvs = [ (import ../other/mavenix/derivation {}) ];
      # buildInputs = with pkgs; [ git ];
      # maven = maven.override { jdk = pkgs.oraclejdk10; };
    }
  '';
in stdenv.mkDerivation {
  inherit name;
  src = ./.;
  buildInputs = [ makeWrapper ];
  installPhase = ''
    mkdir -p $out/bin
    cp mvnix-init mvnix-update $out/bin
    wrapProgram $out/bin/mvnix-init \
      --set CONFIG_TEMPLATE ${default-tmpl} \
      --set MAVENIX_SCRIPT  ${./mavenix.nix}
    wrapProgram $out/bin/mvnix-update \
      --prefix PATH : ${lib.makeBinPath [ yq nix mktemp ]}
  '';
  meta = with stdenv.lib; {
    homepage = https://github.com/icetan/mavenix;
    description = "Mavenix: deterministic builds for Maven using Nix?";
    license = licenses.unlicense;
    maintainers = [ { email = "me@icetan.org"; github = "icetan"; name = "Christopher Fred√©n"; } ];
    platforms = [ "x86_64-linux" ];
  };
}
