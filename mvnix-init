#!/bin/bash
set -e

usage() {
  test "$1" && echo -e Error: $1\\n || echo -n
  cat >&2 <<EOF
  Usage: mvnix-init [OPTIONS] [<NIX-FILE>]

  OPTIONS
    -o, --output <dir>       Output directory for generated files
    -c, --copy-src           Include mavenix.nix
    -v, --verbose            Verbose output
EOF
  exit 1
}

tmpl() { sed "s|%%$1%%|$2|g"; }

# Default values
outputDir="."

# Parse CLI arguments
while test "$1";do
  case "$1" in
    -o|--output) shift;outputDir="$1";;
    -c|--copy-src) copy_src=1;;
    -v|--verbose) set -x;;
    -*) usage;;
    *) config="$1";;
  esac
  shift
done

mkdir -p "$outputDir"
config="${config-$outputDir/default.nix}"
[ ! -e "$config" ] || usage "\"$config\" already exists"

relSrc="$(realpath --relative-to="$(dirname $config)" ".")"
relInfo="$(realpath --relative-to="$(dirname $config)" "$outputDir/mavenix.lock")"

copy() { cp "$1" "$2"; echo "$2"; }
echo >&2 "
  Creating files:
"

if test "$copy_src"; then
  relEnv="./$(realpath --relative-to="$(dirname $config)" "$outputDir/mavenix.nix")"
  copy "$MAVENIX_SCRIPT" "$outputDir/mavenix.nix"
  chmod u+w "$outputDir/mavenix.nix"
else
  relEnv="fetchTarball { url = \"$MAVENIX_DOWNLOAD\"; sha256 = \"$(nix-prefetch-url "$MAVENIX_DOWNLOAD" --unpack 2>&-)\"; }"
fi

copy <(cat "$CONFIG_TEMPLATE" \
| tmpl src "$relSrc" \
| tmpl env "$relEnv" \
| tmpl info "$relInfo" \
) "$config"

copy <(echo -e '{"name":"","deps":[],"metas":[]}') "$outputDir/mavenix.lock"


echo >&2 "
  1. Configure by editing '$config'
  2. Update lock file by running 'mvnix-update \"$config\"'
  3. Build your project 'nix-build \"$config\"'
"
