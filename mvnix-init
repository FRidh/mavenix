#!/bin/bash
set -e

usage() {
  test "$1" && echo -e Error: $1\\n || echo -n
  cat >&2 <<EOF
  Usage: $(basename $0) [OPTIONS] <OUTPUT-NIX-FILE>

  OPTIONS
    --output|-o <dir>       Generated nix files output directory
    --debug|-d              Debug mode
EOF
  exit 1
}

tmpl() { sed "s|%%$1%%|$2|g"; }

# Default values
outputDir="."

# Parse CLI arguments
while test $1;do
  case $1 in
    -o|--output) outputDir="$2";shift 2;;
    -d|--debug) set -x;shift;;
    -*) usage;;
    *) config="$1";shift;;
  esac
done

mkdir -p "$outputDir"
config="${config-$outputDir/default.nix}"
[ ! -e "$config" ] || usage "\"$config\" already exists"

relSrc="$(realpath --relative-to="$(dirname $config)" ".")"
relEnv="$(realpath --relative-to="$(dirname $config)" "$outputDir/mavenix.nix")"
relInfo="$(realpath --relative-to="$(dirname $config)" "$outputDir/mavenix-info.json")"

copy() { cp "$1" "$2"; echo "$2"; }
echo >&2 "
  Creating files:
"
copy <(cat "$CONFIG_TEMPLATE" \
| tmpl src "$relSrc" \
| tmpl env "$relEnv" \
| tmpl info "$relInfo" \
) "$config"
copy "$MAVENIX_SCRIPT" "$outputDir/mavenix.nix"
chmod u+w "$outputDir/mavenix.nix"
copy <(echo -e '{"name":"","deps":[],"metas":[]}') "$outputDir/mavenix-info.json"

echo >&2 "
  Edit the file '$config'
  To capture dependencies run: 'mvnix-update'
  Then build with: 'nix-build $config -A build'
"
